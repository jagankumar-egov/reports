openapi: 3.0.3
info:
  title: Jira Dashboard Flow API
  version: 2.0.0
  description: >
    Enhanced API specification for Jira-like dashboard flows.
    Covers querying issues, managing filters, creating/editing dashboards,
    full CRUD operations for gadgets, and bulk data export processes.

servers:
  - url: https://your-domain.atlassian.net/rest/api/3

paths:
  /search:
    post:
      summary: Execute a JQL query
      description: Run a JQL query and return matching issues.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jql:
                  type: string
                  example: "project = HCM AND status = 'In Progress'"
                startAt:
                  type: integer
                  default: 0
                maxResults:
                  type: integer
                  default: 50
                fields:
                  type: array
                  items:
                    type: string
                  example: ["summary", "status", "assignee"]
      responses:
        "200":
          description: List of issues matching query
          content:
            application/json:
              schema:
                type: object
                properties:
                  issues:
                    type: array
                    items:
                      type: object

  /filter:
    post:
      summary: Save a query as filter
      description: Create a saved filter from JQL.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                jql:
                  type: string
                description:
                  type: string
                favourite:
                  type: boolean
              example:
                name: "HCM In Progress Issues"
                jql: "project = HCM AND status = 'In Progress'"
                description: "All active issues in HCM"
                favourite: true
      responses:
        "201":
          description: Saved filter details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  jql:
                    type: string

    get:
      summary: List saved filters
      description: Get current userâ€™s filters.
      responses:
        "200":
          description: List of saved filters
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    jql:
                      type: string

  /filter/{filterId}:
    get:
      summary: Get specific filter details
      description: Retrieve details of a specific saved filter.
      parameters:
        - name: filterId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Filter details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  jql:
                    type: string
                  description:
                    type: string
                  favourite:
                    type: boolean

    put:
      summary: Update a saved filter
      description: Update an existing saved filter.
      parameters:
        - name: filterId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                jql:
                  type: string
                description:
                  type: string
                favourite:
                  type: boolean
      responses:
        "200":
          description: Updated filter details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  jql:
                    type: string

    delete:
      summary: Delete a saved filter
      description: Delete an existing saved filter.
      parameters:
        - name: filterId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Filter deleted successfully

  /project:
    get:
      summary: List allowed data indexes (projects)
      description: >
        Get list of projects that can be used as "data indexes" for querying issues.
      responses:
        "200":
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    key:
                      type: string
                    name:
                      type: string

  /field:
    get:
      summary: List all available fields
      description: >
        Get list of fields that can be used in queries (like status, priority, assignee).
      responses:
        "200":
          description: List of fields
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    schema:
                      type: object
                      properties:
                        type:
                          type: string

  /gadgets:
    get:
      summary: List available gadgets
      description: >
        Get all available gadget types with their supported configuration properties.
      responses:
        "200":
          description: List of gadget definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "pie-chart"
                    name:
                      type: string
                      example: "Pie Chart"
                    supportedProps:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            example: "filterId"
                          type:
                            type: string
                            example: "string"
                          required:
                            type: boolean
                            example: true

  /dashboard:
    post:
      summary: Create a dashboard
      description: Create a new Jira dashboard.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                sharePermissions:
                  type: array
                  items:
                    type: object
              example:
                name: "HCM Dashboard"
                description: "Monitoring HCM project issues"
                sharePermissions:
                  - type: "group"
                    group:
                      name: "jira-software-users"
      responses:
        "201":
          description: Created dashboard
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  self:
                    type: string

    get:
      summary: List dashboards
      description: Get dashboards visible to the user.
      responses:
        "200":
          description: List of dashboards
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string

  /dashboard/{dashboardId}:
    get:
      summary: Get dashboard details
      description: Get specific dashboard details including metadata.
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dashboard details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  sharePermissions:
                    type: array
                    items:
                      type: object

    put:
      summary: Update dashboard
      description: Update dashboard name, description, or permissions.
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                sharePermissions:
                  type: array
                  items:
                    type: object
      responses:
        "200":
          description: Updated dashboard details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string

    delete:
      summary: Delete dashboard
      description: Delete an existing dashboard and all its gadgets.
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Dashboard deleted successfully

  /dashboard/{dashboardId}/gadget:
    post:
      summary: Add gadget (chart/stat) to dashboard
      description: >
        Simulated API (not official Jira Cloud).
        Gadgets typically consume filters & fields.
        Example for Pie Chart gadget: group by "priority".
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: "pie-chart"
                filterId:
                  type: string
                  example: "10005"
                field:
                  type: string
                  example: "priority"
      responses:
        "201":
          description: Gadget added to dashboard
          content:
            application/json:
              schema:
                type: object
                properties:
                  gadgetId:
                    type: string
                  type:
                    type: string
                  filterId:
                    type: string
                  field:
                    type: string

  /dashboard/{dashboardId}/gadget/{gadgetId}:
    get:
      summary: Get gadget details
      description: Get specific gadget configuration and settings.
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
        - name: gadgetId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Gadget details
          content:
            application/json:
              schema:
                type: object
                properties:
                  gadgetId:
                    type: string
                  type:
                    type: string
                  title:
                    type: string
                  config:
                    type: object
                  position:
                    type: object

    put:
      summary: Update gadget configuration
      description: Update gadget settings, position, or configuration.
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
        - name: gadgetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                filterId:
                  type: string
                field:
                  type: string
                title:
                  type: string
                position:
                  type: object
                  properties:
                    row:
                      type: integer
                    col:
                      type: integer
      responses:
        "200":
          description: Updated gadget details
          content:
            application/json:
              schema:
                type: object
                properties:
                  gadgetId:
                    type: string
                  type:
                    type: string
                  filterId:
                    type: string
                  field:
                    type: string

    delete:
      summary: Remove gadget from dashboard
      description: Delete a gadget from the dashboard.
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
        - name: gadgetId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Gadget removed successfully

  /dashboard/{dashboardId}/config:
    get:
      summary: Fetch dashboard config
      description: >
        Get full dashboard configuration including gadgets, filters, and fields used.
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dashboard config with gadgets and settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  gadgets:
                    type: array
                    items:
                      type: object
                      properties:
                        gadgetId:
                          type: string
                        type:
                          type: string
                        title:
                          type: string
                        config:
                          type: object
                        position:
                          type: object
                          properties:
                            row:
                              type: integer
                            col:
                              type: integer

  /export/bulk:
    post:
      summary: Initiate bulk data export
      description: >
        Start a background process to export filter results in bulk.
        Returns a process ID to track the export status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filterId:
                  type: string
                  description: Filter to export data from
                format:
                  type: string
                  enum: [csv, excel, json, pdf]
                  description: Export format
                fields:
                  type: array
                  items:
                    type: string
                  description: Specific fields to include in export
                maxResults:
                  type: integer
                  description: Maximum number of records to export
                  default: 10000
              required:
                - filterId
                - format
              example:
                filterId: "10005"
                format: "csv"
                fields: ["key", "summary", "status", "assignee", "created"]
                maxResults: 50000
      responses:
        "202":
          description: Export process initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  processId:
                    type: string
                    description: Unique process identifier
                  status:
                    type: string
                    enum: [initiated, processing]
                  estimatedTime:
                    type: string
                    description: Estimated completion time
                example:
                  processId: "exp_123456789"
                  status: "initiated"
                  estimatedTime: "2-5 minutes"

  /export/process/{processId}:
    get:
      summary: Check export process status
      description: Get the current status of a bulk export process.
      parameters:
        - name: processId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Process status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  processId:
                    type: string
                  status:
                    type: string
                    enum: [initiated, processing, completed, failed, expired]
                  progress:
                    type: integer
                    description: Progress percentage (0-100)
                  recordsProcessed:
                    type: integer
                  totalRecords:
                    type: integer
                  downloadUrl:
                    type: string
                    description: Download URL (available when status is completed)
                  expiresAt:
                    type: string
                    format: date-time
                    description: When the download link expires
                  errorMessage:
                    type: string
                    description: Error details (if status is failed)
                example:
                  processId: "exp_123456789"
                  status: "completed"
                  progress: 100
                  recordsProcessed: 45623
                  totalRecords: 45623
                  downloadUrl: "/export/download/exp_123456789"
                  expiresAt: "2024-01-15T10:30:00Z"

    delete:
      summary: Cancel export process
      description: Cancel a running export process.
      parameters:
        - name: processId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Export process cancelled
        "404":
          description: Process not found or already completed

  /export/download/{processId}:
    get:
      summary: Download export file
      description: Download the exported file for a completed process.
      parameters:
        - name: processId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Export file download
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
            application/json:
              schema:
                type: object
        "404":
          description: File not found or expired
        "410":
          description: Download link expired

  /export/processes:
    get:
      summary: List user's export processes
      description: Get list of export processes for current user.
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [initiated, processing, completed, failed, expired]
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
      responses:
        "200":
          description: List of export processes
          content:
            application/json:
              schema:
                type: object
                properties:
                  processes:
                    type: array
                    items:
                      type: object
                      properties:
                        processId:
                          type: string
                        status:
                          type: string
                        filterId:
                          type: string
                        format:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        completedAt:
                          type: string
                          format: date-time
                  total:
                    type: integer
